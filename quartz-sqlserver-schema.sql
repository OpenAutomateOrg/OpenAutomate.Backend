--
-- Quartz.NET SQL Server Database Schema
-- This script creates the tables required for Quartz.NET job persistence
-- Based on the official Quartz.NET 3.x schema
--

-- Drop existing tables if they exist (in correct order due to foreign keys)
IF OBJECT_ID('[dbo].[QRTZ_FIRED_TRIGGERS]', 'U') IS NOT NULL
    DROP TABLE [dbo].[QRTZ_FIRED_TRIGGERS];

IF OBJECT_ID('[dbo].[QRTZ_PAUSED_TRIGGER_GRPS]', 'U') IS NOT NULL
    DROP TABLE [dbo].[QRTZ_PAUSED_TRIGGER_GRPS];

IF OBJECT_ID('[dbo].[QRTZ_SCHEDULER_STATE]', 'U') IS NOT NULL
    DROP TABLE [dbo].[QRTZ_SCHEDULER_STATE];

IF OBJECT_ID('[dbo].[QRTZ_LOCKS]', 'U') IS NOT NULL
    DROP TABLE [dbo].[QRTZ_LOCKS];

IF OBJECT_ID('[dbo].[QRTZ_SIMPLE_TRIGGERS]', 'U') IS NOT NULL
    DROP TABLE [dbo].[QRTZ_SIMPLE_TRIGGERS];

IF OBJECT_ID('[dbo].[QRTZ_CRON_TRIGGERS]', 'U') IS NOT NULL
    DROP TABLE [dbo].[QRTZ_CRON_TRIGGERS];

IF OBJECT_ID('[dbo].[QRTZ_SIMPROP_TRIGGERS]', 'U') IS NOT NULL
    DROP TABLE [dbo].[QRTZ_SIMPROP_TRIGGERS];

IF OBJECT_ID('[dbo].[QRTZ_BLOB_TRIGGERS]', 'U') IS NOT NULL
    DROP TABLE [dbo].[QRTZ_BLOB_TRIGGERS];

IF OBJECT_ID('[dbo].[QRTZ_TRIGGERS]', 'U') IS NOT NULL
    DROP TABLE [dbo].[QRTZ_TRIGGERS];

IF OBJECT_ID('[dbo].[QRTZ_JOB_DETAILS]', 'U') IS NOT NULL
    DROP TABLE [dbo].[QRTZ_JOB_DETAILS];

IF OBJECT_ID('[dbo].[QRTZ_CALENDARS]', 'U') IS NOT NULL
    DROP TABLE [dbo].[QRTZ_CALENDARS];

-- Create the Quartz.NET tables

-- Table: QRTZ_JOB_DETAILS
-- Stores job details information
CREATE TABLE [dbo].[QRTZ_JOB_DETAILS] (
    [SCHED_NAME] [nvarchar](120) NOT NULL,
    [JOB_NAME] [nvarchar](200) NOT NULL,
    [JOB_GROUP] [nvarchar](200) NOT NULL,
    [DESCRIPTION] [nvarchar](250) NULL,
    [JOB_CLASS_NAME] [nvarchar](250) NOT NULL,
    [IS_DURABLE] [bit] NOT NULL,
    [IS_NONCONCURRENT] [bit] NOT NULL,
    [IS_UPDATE_DATA] [bit] NOT NULL,
    [REQUESTS_RECOVERY] [bit] NOT NULL,
    [JOB_DATA] [image] NULL,
    CONSTRAINT [PK_QRTZ_JOB_DETAILS] PRIMARY KEY CLUSTERED ([SCHED_NAME], [JOB_NAME], [JOB_GROUP])
);

-- Table: QRTZ_TRIGGERS
-- Stores trigger information
CREATE TABLE [dbo].[QRTZ_TRIGGERS] (
    [SCHED_NAME] [nvarchar](120) NOT NULL,
    [TRIGGER_NAME] [nvarchar](200) NOT NULL,
    [TRIGGER_GROUP] [nvarchar](200) NOT NULL,
    [JOB_NAME] [nvarchar](200) NOT NULL,
    [JOB_GROUP] [nvarchar](200) NOT NULL,
    [DESCRIPTION] [nvarchar](250) NULL,
    [NEXT_FIRE_TIME] [bigint] NULL,
    [PREV_FIRE_TIME] [bigint] NULL,
    [PRIORITY] [int] NULL,
    [TRIGGER_STATE] [nvarchar](16) NOT NULL,
    [TRIGGER_TYPE] [nvarchar](8) NOT NULL,
    [START_TIME] [bigint] NOT NULL,
    [END_TIME] [bigint] NULL,
    [CALENDAR_NAME] [nvarchar](200) NULL,
    [MISFIRE_INSTR] [int] NULL,
    [JOB_DATA] [image] NULL,
    CONSTRAINT [PK_QRTZ_TRIGGERS] PRIMARY KEY CLUSTERED ([SCHED_NAME], [TRIGGER_NAME], [TRIGGER_GROUP]),
    CONSTRAINT [FK_QRTZ_TRIGGERS_QRTZ_JOB_DETAILS] FOREIGN KEY ([SCHED_NAME], [JOB_NAME], [JOB_GROUP]) 
        REFERENCES [dbo].[QRTZ_JOB_DETAILS] ([SCHED_NAME], [JOB_NAME], [JOB_GROUP])
);

-- Table: QRTZ_SIMPLE_TRIGGERS
-- Stores simple trigger information
CREATE TABLE [dbo].[QRTZ_SIMPLE_TRIGGERS] (
    [SCHED_NAME] [nvarchar](120) NOT NULL,
    [TRIGGER_NAME] [nvarchar](200) NOT NULL,
    [TRIGGER_GROUP] [nvarchar](200) NOT NULL,
    [REPEAT_COUNT] [bigint] NOT NULL,
    [REPEAT_INTERVAL] [bigint] NOT NULL,
    [TIMES_TRIGGERED] [bigint] NOT NULL,
    CONSTRAINT [PK_QRTZ_SIMPLE_TRIGGERS] PRIMARY KEY CLUSTERED ([SCHED_NAME], [TRIGGER_NAME], [TRIGGER_GROUP]),
    CONSTRAINT [FK_QRTZ_SIMPLE_TRIGGERS_QRTZ_TRIGGERS] FOREIGN KEY ([SCHED_NAME], [TRIGGER_NAME], [TRIGGER_GROUP]) 
        REFERENCES [dbo].[QRTZ_TRIGGERS] ([SCHED_NAME], [TRIGGER_NAME], [TRIGGER_GROUP]) ON DELETE CASCADE
);

-- Table: QRTZ_CRON_TRIGGERS
-- Stores cron trigger information
CREATE TABLE [dbo].[QRTZ_CRON_TRIGGERS] (
    [SCHED_NAME] [nvarchar](120) NOT NULL,
    [TRIGGER_NAME] [nvarchar](200) NOT NULL,
    [TRIGGER_GROUP] [nvarchar](200) NOT NULL,
    [CRON_EXPRESSION] [nvarchar](250) NOT NULL,
    [TIME_ZONE_ID] [nvarchar](80) NULL,
    CONSTRAINT [PK_QRTZ_CRON_TRIGGERS] PRIMARY KEY CLUSTERED ([SCHED_NAME], [TRIGGER_NAME], [TRIGGER_GROUP]),
    CONSTRAINT [FK_QRTZ_CRON_TRIGGERS_QRTZ_TRIGGERS] FOREIGN KEY ([SCHED_NAME], [TRIGGER_NAME], [TRIGGER_GROUP]) 
        REFERENCES [dbo].[QRTZ_TRIGGERS] ([SCHED_NAME], [TRIGGER_NAME], [TRIGGER_GROUP]) ON DELETE CASCADE
);

-- Table: QRTZ_SIMPROP_TRIGGERS
-- Stores simple property triggers (used by calendar interval and daily time interval triggers)
CREATE TABLE [dbo].[QRTZ_SIMPROP_TRIGGERS] (
    [SCHED_NAME] [nvarchar](120) NOT NULL,
    [TRIGGER_NAME] [nvarchar](200) NOT NULL,
    [TRIGGER_GROUP] [nvarchar](200) NOT NULL,
    [STR_PROP_1] [nvarchar](512) NULL,
    [STR_PROP_2] [nvarchar](512) NULL,
    [STR_PROP_3] [nvarchar](512) NULL,
    [INT_PROP_1] [int] NULL,
    [INT_PROP_2] [int] NULL,
    [LONG_PROP_1] [bigint] NULL,
    [LONG_PROP_2] [bigint] NULL,
    [DEC_PROP_1] [numeric](13,4) NULL,
    [DEC_PROP_2] [numeric](13,4) NULL,
    [BOOL_PROP_1] [bit] NULL,
    [BOOL_PROP_2] [bit] NULL,
    CONSTRAINT [PK_QRTZ_SIMPROP_TRIGGERS] PRIMARY KEY CLUSTERED ([SCHED_NAME], [TRIGGER_NAME], [TRIGGER_GROUP]),
    CONSTRAINT [FK_QRTZ_SIMPROP_TRIGGERS_QRTZ_TRIGGERS] FOREIGN KEY ([SCHED_NAME], [TRIGGER_NAME], [TRIGGER_GROUP]) 
        REFERENCES [dbo].[QRTZ_TRIGGERS] ([SCHED_NAME], [TRIGGER_NAME], [TRIGGER_GROUP]) ON DELETE CASCADE
);

-- Table: QRTZ_BLOB_TRIGGERS
-- Stores blob triggers (for custom trigger types)
CREATE TABLE [dbo].[QRTZ_BLOB_TRIGGERS] (
    [SCHED_NAME] [nvarchar](120) NOT NULL,
    [TRIGGER_NAME] [nvarchar](200) NOT NULL,
    [TRIGGER_GROUP] [nvarchar](200) NOT NULL,
    [BLOB_DATA] [image] NULL,
    CONSTRAINT [PK_QRTZ_BLOB_TRIGGERS] PRIMARY KEY CLUSTERED ([SCHED_NAME], [TRIGGER_NAME], [TRIGGER_GROUP]),
    CONSTRAINT [FK_QRTZ_BLOB_TRIGGERS_QRTZ_TRIGGERS] FOREIGN KEY ([SCHED_NAME], [TRIGGER_NAME], [TRIGGER_GROUP]) 
        REFERENCES [dbo].[QRTZ_TRIGGERS] ([SCHED_NAME], [TRIGGER_NAME], [TRIGGER_GROUP]) ON DELETE CASCADE
);

-- Table: QRTZ_CALENDARS
-- Stores calendar information
CREATE TABLE [dbo].[QRTZ_CALENDARS] (
    [SCHED_NAME] [nvarchar](120) NOT NULL,
    [CALENDAR_NAME] [nvarchar](200) NOT NULL,
    [CALENDAR] [image] NOT NULL,
    CONSTRAINT [PK_QRTZ_CALENDARS] PRIMARY KEY CLUSTERED ([SCHED_NAME], [CALENDAR_NAME])
);

-- Table: QRTZ_PAUSED_TRIGGER_GRPS
-- Stores paused trigger groups
CREATE TABLE [dbo].[QRTZ_PAUSED_TRIGGER_GRPS] (
    [SCHED_NAME] [nvarchar](120) NOT NULL,
    [TRIGGER_GROUP] [nvarchar](200) NOT NULL,
    CONSTRAINT [PK_QRTZ_PAUSED_TRIGGER_GRPS] PRIMARY KEY CLUSTERED ([SCHED_NAME], [TRIGGER_GROUP])
);

-- Table: QRTZ_FIRED_TRIGGERS
-- Stores currently executing (fired) triggers
CREATE TABLE [dbo].[QRTZ_FIRED_TRIGGERS] (
    [SCHED_NAME] [nvarchar](120) NOT NULL,
    [ENTRY_ID] [nvarchar](140) NOT NULL,
    [TRIGGER_NAME] [nvarchar](200) NOT NULL,
    [TRIGGER_GROUP] [nvarchar](200) NOT NULL,
    [INSTANCE_NAME] [nvarchar](200) NOT NULL,
    [FIRED_TIME] [bigint] NOT NULL,
    [SCHED_TIME] [bigint] NOT NULL,
    [PRIORITY] [int] NOT NULL,
    [STATE] [nvarchar](16) NOT NULL,
    [JOB_NAME] [nvarchar](200) NULL,
    [JOB_GROUP] [nvarchar](200) NULL,
    [IS_NONCONCURRENT] [bit] NULL,
    [REQUESTS_RECOVERY] [bit] NULL,
    CONSTRAINT [PK_QRTZ_FIRED_TRIGGERS] PRIMARY KEY CLUSTERED ([SCHED_NAME], [ENTRY_ID])
);

-- Table: QRTZ_SCHEDULER_STATE
-- Stores scheduler state information for clustering
CREATE TABLE [dbo].[QRTZ_SCHEDULER_STATE] (
    [SCHED_NAME] [nvarchar](120) NOT NULL,
    [INSTANCE_NAME] [nvarchar](200) NOT NULL,
    [LAST_CHECKIN_TIME] [bigint] NOT NULL,
    [CHECKIN_INTERVAL] [bigint] NOT NULL,
    CONSTRAINT [PK_QRTZ_SCHEDULER_STATE] PRIMARY KEY CLUSTERED ([SCHED_NAME], [INSTANCE_NAME])
);

-- Table: QRTZ_LOCKS
-- Stores locks for clustering
CREATE TABLE [dbo].[QRTZ_LOCKS] (
    [SCHED_NAME] [nvarchar](120) NOT NULL,
    [LOCK_NAME] [nvarchar](40) NOT NULL,
    CONSTRAINT [PK_QRTZ_LOCKS] PRIMARY KEY CLUSTERED ([SCHED_NAME], [LOCK_NAME])
);

-- Insert default lock records for clustering
INSERT INTO [dbo].[QRTZ_LOCKS] VALUES('OpenAutomate-Scheduler', 'TRIGGER_ACCESS');
INSERT INTO [dbo].[QRTZ_LOCKS] VALUES('OpenAutomate-Scheduler', 'JOB_ACCESS');
INSERT INTO [dbo].[QRTZ_LOCKS] VALUES('OpenAutomate-Scheduler', 'CALENDAR_ACCESS');
INSERT INTO [dbo].[QRTZ_LOCKS] VALUES('OpenAutomate-Scheduler', 'STATE_ACCESS');
INSERT INTO [dbo].[QRTZ_LOCKS] VALUES('OpenAutomate-Scheduler', 'MISFIRE_ACCESS');

-- Create indexes for better performance
CREATE INDEX [IDX_QRTZ_J_REQ_RECOVERY] ON [dbo].[QRTZ_JOB_DETAILS]([SCHED_NAME], [REQUESTS_RECOVERY]);
CREATE INDEX [IDX_QRTZ_J_GRP] ON [dbo].[QRTZ_JOB_DETAILS]([SCHED_NAME], [JOB_GROUP]);

CREATE INDEX [IDX_QRTZ_T_J] ON [dbo].[QRTZ_TRIGGERS]([SCHED_NAME], [JOB_NAME], [JOB_GROUP]);
CREATE INDEX [IDX_QRTZ_T_JG] ON [dbo].[QRTZ_TRIGGERS]([SCHED_NAME], [JOB_GROUP]);
CREATE INDEX [IDX_QRTZ_T_C] ON [dbo].[QRTZ_TRIGGERS]([SCHED_NAME], [CALENDAR_NAME]);
CREATE INDEX [IDX_QRTZ_T_G] ON [dbo].[QRTZ_TRIGGERS]([SCHED_NAME], [TRIGGER_GROUP]);
CREATE INDEX [IDX_QRTZ_T_STATE] ON [dbo].[QRTZ_TRIGGERS]([SCHED_NAME], [TRIGGER_STATE]);
CREATE INDEX [IDX_QRTZ_T_N_STATE] ON [dbo].[QRTZ_TRIGGERS]([SCHED_NAME], [TRIGGER_NAME], [TRIGGER_GROUP], [TRIGGER_STATE]);
CREATE INDEX [IDX_QRTZ_T_N_G_STATE] ON [dbo].[QRTZ_TRIGGERS]([SCHED_NAME], [TRIGGER_GROUP], [TRIGGER_STATE]);
CREATE INDEX [IDX_QRTZ_T_NEXT_FIRE_TIME] ON [dbo].[QRTZ_TRIGGERS]([SCHED_NAME], [NEXT_FIRE_TIME]);
CREATE INDEX [IDX_QRTZ_T_NFT_ST] ON [dbo].[QRTZ_TRIGGERS]([SCHED_NAME], [TRIGGER_STATE], [NEXT_FIRE_TIME]);
CREATE INDEX [IDX_QRTZ_T_NFT_MISFIRE] ON [dbo].[QRTZ_TRIGGERS]([SCHED_NAME], [MISFIRE_INSTR], [NEXT_FIRE_TIME]);
CREATE INDEX [IDX_QRTZ_T_NFT_ST_MISFIRE] ON [dbo].[QRTZ_TRIGGERS]([SCHED_NAME], [MISFIRE_INSTR], [NEXT_FIRE_TIME], [TRIGGER_STATE]);
CREATE INDEX [IDX_QRTZ_T_NFT_ST_MISFIRE_GRP] ON [dbo].[QRTZ_TRIGGERS]([SCHED_NAME], [MISFIRE_INSTR], [NEXT_FIRE_TIME], [TRIGGER_GROUP], [TRIGGER_STATE]);

CREATE INDEX [IDX_QRTZ_FT_TRIG_INST_NAME] ON [dbo].[QRTZ_FIRED_TRIGGERS]([SCHED_NAME], [INSTANCE_NAME]);
CREATE INDEX [IDX_QRTZ_FT_INST_JOB_REQ_RCVRY] ON [dbo].[QRTZ_FIRED_TRIGGERS]([SCHED_NAME], [INSTANCE_NAME], [REQUESTS_RECOVERY]);
CREATE INDEX [IDX_QRTZ_FT_J_G] ON [dbo].[QRTZ_FIRED_TRIGGERS]([SCHED_NAME], [JOB_NAME], [JOB_GROUP]);
CREATE INDEX [IDX_QRTZ_FT_JG] ON [dbo].[QRTZ_FIRED_TRIGGERS]([SCHED_NAME], [JOB_GROUP]);
CREATE INDEX [IDX_QRTZ_FT_T_G] ON [dbo].[QRTZ_FIRED_TRIGGERS]([SCHED_NAME], [TRIGGER_NAME], [TRIGGER_GROUP]);
CREATE INDEX [IDX_QRTZ_FT_TG] ON [dbo].[QRTZ_FIRED_TRIGGERS]([SCHED_NAME], [TRIGGER_GROUP]);

PRINT 'Quartz.NET SQL Server schema created successfully!';
PRINT 'Tables created:';
PRINT '  - QRTZ_JOB_DETAILS';
PRINT '  - QRTZ_TRIGGERS';
PRINT '  - QRTZ_SIMPLE_TRIGGERS';
PRINT '  - QRTZ_CRON_TRIGGERS';
PRINT '  - QRTZ_SIMPROP_TRIGGERS';
PRINT '  - QRTZ_BLOB_TRIGGERS';
PRINT '  - QRTZ_CALENDARS';
PRINT '  - QRTZ_PAUSED_TRIGGER_GRPS';
PRINT '  - QRTZ_FIRED_TRIGGERS';
PRINT '  - QRTZ_SCHEDULER_STATE';
PRINT '  - QRTZ_LOCKS';
PRINT '';
PRINT 'Default lock records inserted for scheduler: OpenAutomate-Scheduler';
PRINT 'Performance indexes created.';
PRINT '';
PRINT 'You can now run your Quartz.NET application with SQL Server job store!'; 