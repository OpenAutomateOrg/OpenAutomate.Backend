name: Deploy OpenAutomate Backend

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build app
      run: dotnet build --configuration Release --no-restore
      
    - name: Publish app
      run: dotnet publish -c Release -o publish --no-restore
      
    - name: Deploy to server
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        source: "publish/**,docker-compose.redis.prod.yml,redis.conf"
        target: "/var/www/openautomate/backend"

    - name: Setup Docker and Redis services
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd /var/www/openautomate/backend

          # Install Docker if not already installed
          if ! command -v docker &> /dev/null; then
            echo "Installing Docker..."
            curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
            sudo usermod -aG docker $USER
            echo "Docker installed successfully"
          else
            echo "Docker is already installed"
          fi

          # Install Docker Compose if not already installed
          if ! docker compose version &> /dev/null; then
            echo "Installing Docker Compose..."
            sudo apt-get update
            sudo apt-get install -y docker-compose-plugin
            echo "Docker Compose installed successfully"
          else
            echo "Docker Compose is already installed"
          fi

          # Ensure Docker service is running
          sudo systemctl enable docker
          sudo systemctl start docker

          # Setup Redis if not already running
          if ! docker ps | grep -q openautomae-redis-prod; then
            echo "Setting up Redis..."
            docker compose -f docker-compose.redis.prod.yml up -d
          else
            echo "Redis already running"
          fi

          # Wait for Redis to be ready
          echo "Waiting for Redis to be ready..."
          timeout 30 bash -c 'until docker exec openautomae-redis-prod redis-cli ping | grep -q PONG; do sleep 1; done'

          # Restart backend service
          sudo systemctl restart openautomate-backend
