name: SonarQube Analysis

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

env:
  SONAR_PROJECT_KEY: openautomate-backend
  SONAR_PROJECT_NAME: openautomate-backend
  SONAR_HOST_URL: http://sonar.openautomate.me
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  sonar:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up .NET SDK
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0'

      # Step 3: Install SonarQube Scanner + Java
      - name: Install Java and Sonar Scanner
        run: |
          sudo apt-get update && sudo apt-get install -y openjdk-17-jdk
          dotnet tool install --global dotnet-sonarscanner
      - name: Add dotnet tools to PATH
        run: echo "/root/.dotnet/tools" >> $GITHUB_PATH

      # Step 4: Begin SonarQube analysis
      - name: Begin SonarQube analysis
        run: |
          dotnet sonarscanner begin \
            /k:"$SONAR_PROJECT_KEY" \
            /o:"$SONAR_PROJECT_NAME" \
            /d:sonar.host.url="$SONAR_HOST_URL" \
            /d:sonar.login="$SONAR_TOKEN" \
            /d:sonar.cs.opencover.reportsPaths=coverage.opencover.xml

      # Step 5: Restore, Build, and Test with Coverage
      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --configuration Release

      - name: Run tests with coverage
        run: |
          dotnet test --no-build --configuration Release \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=opencover \
            /p:CoverletOutput=coverage

      # Step 6: End SonarQube analysis
      - name: End SonarQube analysis
        run: dotnet sonarscanner end /d:sonar.login="$SONAR_TOKEN"
